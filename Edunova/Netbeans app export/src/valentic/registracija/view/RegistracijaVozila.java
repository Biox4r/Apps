/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package valentic.registracija.view;



import java.io.FileInputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import valentic.registracija.controller.KontrolaUnosa;
import valentic.registracija.controller.ObradaRegistracije;
import valentic.registracija.model.Placanje;
import valentic.registracija.model.Registracija;
import valentic.registracija.model.Stranka;
import valentic.registracija.model.Vozilo;
import valentic.registracija.model.Zaposlenik;
import valentic.registracija.utility.Pomocno;

/**
 *
 * @author Basic
 */
public class RegistracijaVozila extends javax.swing.JFrame {

    private ObradaRegistracije obr;
    private Registracija registracija;
    private int sifraV;
    private String query, query1;
    private int sifraPlacanja;
    private SimpleDateFormat sdf;
    private Vozilo vozilo;
    private KontrolaUnosa ku;
    private Placanje placanje;
    private Stranka stranka;
    private Zaposlenik zaposlenik;
   

    public RegistracijaVozila(Zaposlenik zaposlenik) {
        initComponents();
        grupaIspravno.add(ispravnoDa);
        grupaIspravno.add(ispravnoNe);
        obr = new ObradaRegistracije();
        sdf = new SimpleDateFormat("dd.MM.yyyy");
        tempDatum.hide();
        Pomocno.KontrolaDatuma(tempDatum);
        ispravnoNe.setSelected(true);
        ku = new KontrolaUnosa();
        setLocationRelativeTo(null);
        this.placanje = placanje;
        this.stranka = stranka;
        DefaultListModel model = new DefaultListModel();    
        listaRegistracijeVozila.setModel(model);
        this.zaposlenik = zaposlenik;
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupaIspravno = new javax.swing.ButtonGroup();
        jButton9 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        unosNoveRegistracije = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        voziloUpis = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        strankaUpis = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaRegistracijeVozila = new javax.swing.JList();
        tablice = new javax.swing.JTextField();
        nazivServisa = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        idZahtjeva = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        imePodnositelja = new javax.swing.JTextField();
        datumRegistracije = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        oibPodnositelja = new javax.swing.JTextField();
        nazivOsiguravajuceKuce = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        iznosUplate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        datumUplate = new javax.swing.JTextField();
        tempDatum = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        dodajPodatke = new javax.swing.JButton();
        ispravnoDa = new javax.swing.JRadioButton();
        ispravnoNe = new javax.swing.JRadioButton();
        obrisiPodatke = new javax.swing.JButton();
        izmjeniPodatke = new javax.swing.JButton();
        pdfChek = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/zavrsi.png"))); // NOI18N
        jButton9.setText("Zavr≈°i registraciju ");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zatvoriProzor(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/registracija.png"))); // NOI18N
        jLabel7.setText("Registracija");

        unosNoveRegistracije.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        unosNoveRegistracije.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/dodaj2.png"))); // NOI18N
        unosNoveRegistracije.setText("Pripremi novi unos");
        unosNoveRegistracije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unosNoveRegistracijeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Registracije odabranog vozila");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Stranka");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Vozilo");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Naziv servisa");

        listaRegistracijeVozila.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaRegistracijeVozilaMouseClicked(evt);
            }
        });
        listaRegistracijeVozila.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaRegistracijeVozilaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaRegistracijeVozila);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Tablice");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablice, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(strankaUpis)
                        .addComponent(voziloUpis)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nazivServisa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(voziloUpis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strankaUpis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nazivServisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel10.setText("Ime podnositelja zahtjeva");

        jLabel2.setText("Datum registracije");

        datumRegistracije.setEditable(false);

        jLabel12.setText("ID zahtjeva registracije");

        jLabel9.setText("Naziv osiguravjuƒáe kuƒáe");

        jLabel8.setText("Oib podnositelja zahtjeva");

        jLabel3.setText("Iznos uplate");

        jLabel4.setText("Datum uplate");

        datumUplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datumUplateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imePodnositelja, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(oibPodnositelja, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idZahtjeva, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nazivOsiguravajuceKuce, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(datumRegistracije, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(iznosUplate)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(datumUplate)
                    .addComponent(tempDatum))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datumRegistracije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imePodnositelja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oibPodnositelja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nazivOsiguravajuceKuce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idZahtjeva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iznosUplate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datumUplate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tempDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dodajPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dodajPodatke.setForeground(new java.awt.Color(255, 0, 0));
        dodajPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/dodaj2.png"))); // NOI18N
        dodajPodatke.setText("Nova registracija");
        dodajPodatke.setToolTipText("");
        dodajPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dodajPodatke.setIconTextGap(12);
        dodajPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajPodatkeActionPerformed(evt);
            }
        });

        ispravnoDa.setText("Ispravno");

        ispravnoNe.setText("Neispravno");

        obrisiPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        obrisiPodatke.setForeground(new java.awt.Color(255, 0, 0));
        obrisiPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/obrisi2.png"))); // NOI18N
        obrisiPodatke.setText("Obri≈°i podatke");
        obrisiPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        obrisiPodatke.setIconTextGap(12);
        obrisiPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obrisiPodatkeActionPerformed(evt);
            }
        });

        izmjeniPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        izmjeniPodatke.setForeground(new java.awt.Color(255, 51, 0));
        izmjeniPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/izmjeni.png"))); // NOI18N
        izmjeniPodatke.setText("Izmjeni podatke");
        izmjeniPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        izmjeniPodatke.setIconTextGap(12);
        izmjeniPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izmjeniPodatkeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(izmjeniPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(obrisiPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dodajPodatke, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ispravnoDa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ispravnoNe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(dodajPodatke)
                .addGap(18, 18, 18)
                .addComponent(izmjeniPodatke)
                .addGap(25, 25, 25)
                .addComponent(obrisiPodatke)
                .addGap(10, 10, 10)
                .addComponent(ispravnoDa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ispravnoNe)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pdfChek.setText("Generiraj PDF izvje≈°taj");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(pdfChek, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(unosNoveRegistracije, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pdfChek)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addComponent(unosNoveRegistracije, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jButton9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dodajPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajPodatkeActionPerformed

        
        registracija = new Registracija();

        
        //Pomocno.KontrolaDatuma(tempdatum);
        
        if(!datumUplate.getText().equals(datumRegistracije.getText()) | !datumRegistracije.equals(tempDatum.getText()) ){
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Uplata za registraciju mora imati dana≈°nji datum ",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (datumRegistracije.getText().trim().length() == 0 || imePodnositelja.getText().trim().length() == 0 || oibPodnositelja.getText().trim().length() == 0 || nazivOsiguravajuceKuce.getText().trim().length() == 0 || idZahtjeva.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Obavezan unos svih polja!",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!ku.provjeraUnosaZaDatum(datumRegistracije) || !ku.provjeraUnosaImenaPrezimena(imePodnositelja) || !ku.provjeraUnosaOiba(oibPodnositelja) || !ku.provjeraUnosaID(idZahtjeva) || !ku.provjeraUnosaNaziva(nazivOsiguravajuceKuce) ) {
            return;
        }

        
        

        unosPoljaZaRegistraciju(registracija);

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko ≈æelite dodati podatke za Registraciju oznaƒçite ispravnost odabira!",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (obr.dodaj(registracija)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspje≈°no dodani podaci o registraciji! ",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);
                ucitajPodatkeListe();
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogre≈°ka kod dodavanja podataka!",
                        "Gre≈°ka",
                        JOptionPane.ERROR_MESSAGE);
            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_dodajPodatkeActionPerformed

    private void unosNoveRegistracijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unosNoveRegistracijeActionPerformed

        Pomocno.KontrolaDatuma(datumRegistracije);

        tempPodaciStrankeIVozila();
        
        nazivOsiguravajuceKuce.setText(null);
        idZahtjeva.setText(null);
        nazivServisa.setText("Sunce d.d.");

        // TODO add your handling code here:
    }//GEN-LAST:event_unosNoveRegistracijeActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        registracija = obr.getRegistracija(placanje);
        popuniPoljaZaUnos(registracija);
        ucitajPodatkeListe();
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void izmjeniPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izmjeniPodatkeActionPerformed
  
        if(listaRegistracijeVozila.getSelectedIndex()<0){
             JOptionPane.showMessageDialog(
                    rootPane, 
                    "Prvo odaberite stavku iz liste",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
             return;
        }
        
        
       registracija =  (Registracija) listaRegistracijeVozila.getSelectedValue();
        
        if (!ku.provjeraUnosaZaDatum(datumRegistracije) || !ku.provjeraUnosaImenaPrezimena(imePodnositelja) || !ku.provjeraUnosaOiba(oibPodnositelja) || !ku.provjeraUnosaID(idZahtjeva) || !ku.provjeraUnosaNaziva(nazivOsiguravajuceKuce)) {
            return;
        }

       unosPoljaZaRegistraciju(registracija);

        

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko ≈æelite dodati podatke za Registraciju oznaƒçite ispravnost odabira!",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (obr.izmjeni(registracija)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspje≈°no izmjenjeni podaci o registraciji! ",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogre≈°ka kod izmjene podataka!",
                        "Gre≈°ka",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_izmjeniPodatkeActionPerformed

    private void obrisiPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obrisiPodatkeActionPerformed

        
        if(listaRegistracijeVozila.getSelectedIndex()<0){
             JOptionPane.showMessageDialog(
                    rootPane, 
                    "Prvo odaberite stavku iz liste",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
             return;
        }
        
       registracija = (Registracija) listaRegistracijeVozila.getSelectedValue();
        
        Object[] options = {"Da", "Ne, vrati se nazad",};

        int izbor = JOptionPane.showOptionDialog(rootPane, "Da li stvarno ≈æelite obrisati podatke Registracije  ??", "Sistem", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko ≈æelite obrisati podatke oznaƒçite ispravnost odabira!",
                    "Obavijest",
                    JOptionPane.ERROR_MESSAGE);
        } else if (izbor == 0) {
            if (obr.obrisi(registracija)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspje≈°no obrisani podaci o registraciji! ",
                        "Obavijest",
                        JOptionPane.PLAIN_MESSAGE);
                ucitajPodatkeListe();
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogre≈°ka kod brisanja podataka!",
                        "Gre≈°ka",
                        JOptionPane.ERROR_MESSAGE);
            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_obrisiPodatkeActionPerformed

    private void zatvoriProzor(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zatvoriProzor

        if(pdfChek.isSelected()){
            JasperToPDF();
        }
        
        dispose();
        
// TODO add your handling code here:
    }//GEN-LAST:event_zatvoriProzor

    private void listaRegistracijeVozilaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaRegistracijeVozilaMouseClicked

        if (listaRegistracijeVozila.getSelectedIndex() < 0) {

            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite Registraciju koja vas zanima!",
                    "Pogre≈°ka",
                    JOptionPane.PLAIN_MESSAGE);
            return;

        }

        //dohvaƒáanje vozila sa liste
        registracija = (Registracija) listaRegistracijeVozila.getSelectedValue();
        // metoda za popunjavanje liste
        popuniPoljaZaUnos(registracija);
        // TODO add your handling code here:
    }//GEN-LAST:event_listaRegistracijeVozilaMouseClicked

    private void listaRegistracijeVozilaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaRegistracijeVozilaValueChanged

        if(evt.getValueIsAdjusting()){
            return;
            
        }
        
        registracija = (Registracija) listaRegistracijeVozila.getSelectedValue();
        popuniPoljaZaUnos(registracija);
        // TODO add your handling code here:
    }//GEN-LAST:event_listaRegistracijeVozilaValueChanged

    private void datumUplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datumUplateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datumUplateActionPerformed

    void popuniPoljaZaUnos(Registracija re) {
        try {
            datumRegistracije.setText(sdf.format(re.getDatumRegistracije()));
        } catch (Exception e) {
            Pomocno.KontrolaDatuma(datumRegistracije);
        }

        try {
            imePodnositelja.setText(re.getImePodnositeljaZahtjeva());
        } catch (Exception e) {
            imePodnositelja.setText(stranka.getIme()+""+stranka.getPrezime());
        }

        try {
            oibPodnositelja.setText(re.getOibPodnositeljaZahtjeva());
        } catch (Exception e) {
            oibPodnositelja.setText(stranka.getOib());
        }

        try {
            nazivOsiguravajuceKuce.setText(re.getNazivOsiguravateljskeKuce());
        } catch (Exception e) {
            nazivOsiguravajuceKuce.setText("");
        }

        try {
            idZahtjeva.setText(re.getIdZahtjeva());
        } catch (Exception e) {
            //idZahtjeva.setText(null);
        }
        
        

        try {
            strankaUpis.setText(stranka.getIme().trim() + " " + stranka.getPrezime());
        } catch (Exception e) {
            strankaUpis.setText(null);
        }
        
        try {
            nazivServisa.setText(re.getNazivServisa());
        } catch (Exception e) {
            nazivServisa.setText("Sunce d.d.");
        }

        try {
            sifraV = vozilo.getSifra();
        } catch (Exception e) {
            sifraV = 0;
        }

        try {
            voziloUpis.setText(vozilo.getNazivVozila());
        } catch (Exception e) {
            voziloUpis.setText(null);
        }

        try {
            tablice.setText(vozilo.getTablice());
        } catch (Exception e) {
            tablice.setText(null);
        }
        
        try {
            iznosUplate.setText(String.valueOf(placanje.getUkupno()));
        } catch (Exception e) {
            iznosUplate.setText(String.valueOf(placanje.getUkupno()));
        }
        
        try {
            datumUplate.setText(sdf.format(placanje.getDatumPlacanja()));
        } catch (Exception e) {
            Pomocno.KontrolaDatuma(datumRegistracije);
        }
        
        try {
            sifraPlacanja = placanje.getSifra();
        } catch (Exception e) {
            //sifraPlacanja = 0;
        }

    }

    void setPlacanje(Placanje placanje) {
        this.placanje = placanje;
    }

    void setVozilo(Vozilo vozilo) {
        this.vozilo = vozilo;
    }

    void setStranka(Stranka stranka) {
        this.stranka = stranka;
    }

   

 

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField datumRegistracije;
    private javax.swing.JTextField datumUplate;
    private javax.swing.JButton dodajPodatke;
    private javax.swing.ButtonGroup grupaIspravno;
    private javax.swing.JTextField idZahtjeva;
    private javax.swing.JTextField imePodnositelja;
    private javax.swing.JRadioButton ispravnoDa;
    private javax.swing.JRadioButton ispravnoNe;
    private javax.swing.JButton izmjeniPodatke;
    private javax.swing.JTextField iznosUplate;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listaRegistracijeVozila;
    private javax.swing.JTextField nazivOsiguravajuceKuce;
    private javax.swing.JTextField nazivServisa;
    private javax.swing.JButton obrisiPodatke;
    private javax.swing.JTextField oibPodnositelja;
    private javax.swing.JCheckBox pdfChek;
    private javax.swing.JTextField strankaUpis;
    private javax.swing.JTextField tablice;
    private javax.swing.JTextField tempDatum;
    private javax.swing.JButton unosNoveRegistracije;
    private javax.swing.JTextField voziloUpis;
    // End of variables declaration//GEN-END:variables

    private void unosPoljaZaRegistraciju(Registracija registracija) {
        try {
            registracija.setDatumRegistracije(sdf.parse(datumRegistracije.getText()));
        } catch (Exception e) {
            registracija.setDatumRegistracije(null);
        }

        registracija.setVozilo(sifraV);
        registracija.setPlacanje(sifraPlacanja);
        registracija.setImePodnositeljaZahtjeva(imePodnositelja.getText());

        registracija.setOibPodnositeljaZahtjeva(oibPodnositelja.getText());

        registracija.setNazivOsiguravajuceKuce(nazivOsiguravajuceKuce.getText());
        
        registracija.setIdZahtjeva(idZahtjeva.getText());
        
        registracija.setNazivServisa(nazivServisa.getText());
        
        

        
    }

    private void ucitajPodatkeListe() {
        List<Registracija> registracije = obr.getRegistracije(vozilo);
        DefaultListModel<Registracija> re = new DefaultListModel<>();
        for (Registracija registracija1 : registracije) {
            re.addElement(registracija1);
        }
        this.listaRegistracijeVozila.setModel(re);

    }

    private void JasperToPDF(){
        
        
        
        ArrayList<String>podaciOStranci = new ArrayList<>();
        
       
        podaciOStranci.add(stranka.getIme());
        /*
        podaciOStranci.add(stranka.getAdresa());
        podaciOStranci.add(stranka.getMobitel());
        podaciOStranci.add(vozilo.getNazivVozila());
        podaciOStranci.add(placanje.getUkupno().toString());
        podaciOStranci.add(zaposlenik.getIme() + " " + zaposlenik.getImePrezime());
        */
        try{
        InputStream inputStream = new FileInputStream ("reports/IzvjestajRegistracije.jrxml");
 
        JRBeanCollectionDataSource beanColDataSource = new
        JRBeanCollectionDataSource(podaciOStranci);
 
        Map parameters = new HashMap();
// parameters.put("nazivGrupe",grupa.getNaziv());
// parameters.put("predavac",grupa.getPredavac().toString());
        
        parameters.put("stranka",stranka);
        parameters.put("vozilo",vozilo);
        parameters.put("placanje",placanje);
        parameters.put("zaposlenik",zaposlenik);
        parameters.put("registracija",registracija);
     
        
        
JasperDesign jasperDesign = JRXmlLoader.load(inputStream);
JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, beanColDataSource);
JRPdfExporter exporter = new JRPdfExporter();
exporter.setParameter(JRExporterParameter.CHARACTER_ENCODING, "UTF-8");
JasperExportManager.exportReportToPdfFile(jasperPrint, "e:/IzvjestajRegistracije.pdf"); 



ProcessBuilder pb = new ProcessBuilder("cmd", "/C start " + "e:/IzvjestajRegistracije.pdf");
                pb.start();

       }
       catch(Exception e){
           e.printStackTrace();
       }
    }

    
        private void tempPodaciStrankeIVozila() {
        try {
            imePodnositelja.setText(stranka.getIme() + " " + stranka.getPrezime());
        } catch (Exception e) {
            imePodnositelja.setText("");
        }
        
        try {
            oibPodnositelja.setText((stranka.getOib()));
        } catch (Exception e) {
            oibPodnositelja.setText("");
        }

    }
    }
    
    
    

