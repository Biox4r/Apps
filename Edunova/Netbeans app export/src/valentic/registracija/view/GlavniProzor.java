/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package valentic.registracija.view;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import valentic.registracija.controller.IznimkaBrisanja;
import valentic.registracija.controller.KontrolaUnosa;
import valentic.registracija.controller.ObradaPlacanja;
import valentic.registracija.controller.ObradaStrankeIVozila;
import valentic.registracija.controller.ObradaTehnicki;
import valentic.registracija.model.Placanje;
import valentic.registracija.model.Stranka;
import valentic.registracija.model.Tehnicki;
import valentic.registracija.model.Vozilo;
import valentic.registracija.model.Zaposlenik;
import valentic.registracija.zaposlenici.view.PretragaZaposlenika;
import valentic.registracija.zaposlenici.view.PromjenaLozinke;

/**
 *
 * @author Basic
 */
public class GlavniProzor extends javax.swing.JFrame {

    private ObradaStrankeIVozila obradaGlavniProzor;
    private Stranka stranka;
    private Vozilo vozilo;
    private Zaposlenik zaposlenik;
    private String upis;
    public KontrolaUnosa ku;
    boolean windowActive = true;
    private ObradaPlacanja obradaPlacanja;
    private Placanje placanje;
    private Tehnicki tehnicki;
    private ObradaTehnicki obradaTehncki;
    private String query, query1 ;
    private JTextField tempStringKategorijaVozila;

    //private String query = "select sifra from stranka where oib=?";
    /**
     * Creates new form GlavniProzor
     */
    public GlavniProzor(Zaposlenik zaposlenik) {
        initComponents();
        obradaGlavniProzor = new ObradaStrankeIVozila();
        grupaIspravnoS.add(ispravnoDaS);
        grupaIspravnoS.add(ispravnoNeS);
        ispravnoNeS.setSelected(true);
        vozilo = new Vozilo();
        DefaultListModel model = new DefaultListModel();
        vozilaList.setModel(model);
        obradaPlacanja = new ObradaPlacanja();
        obradaTehncki = new ObradaTehnicki();
        this.zaposlenik = zaposlenik;
        this.placanje = placanje;
        this.tehnicki = tehnicki;
        this.setTitle(this.getTitle() + " " + zaposlenik.getImePrezime());
        grupaIspravnoVo.add(ispravnoDaVo);
        grupaIspravnoVo.add(ispravnoNeVo);
        ispravnoNeVo.setSelected(true);

        query = "select sifra from stranka where oib=? and sifra!=?";
        query1 = "select sifra from stranka where oib=?";
        ku = new KontrolaUnosa();
        pretrazivanje();
        //popuniPoljaStranke(stranka);

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupaIspravnoS = new javax.swing.ButtonGroup();
        grupaIspravnoVo = new javax.swing.ButtonGroup();
        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ostaliPodaciOStranci = new javax.swing.JButton();
        adresa = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        novaStranka = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        pretraga = new javax.swing.JComboBox();
        imeStranke = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        oib = new javax.swing.JTextField();
        mobitel = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        prezimeStranke = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        noviUnosVozila = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        tablice = new javax.swing.JTextField();
        imeVo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ostaliPodaciOVozilu = new javax.swing.JButton();
        boja = new javax.swing.JTextField();
        godiste = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        obrisiStranku = new javax.swing.JButton();
        ispravnoNeS = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vozilaList = new javax.swing.JList();
        ispravnoDaS = new javax.swing.JRadioButton();
        dodajstranku = new javax.swing.JButton();
        izmjeniStranku = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        tehnickipregledi = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        placanja = new javax.swing.JButton();
        registracija = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        promjeniVozilo = new javax.swing.JButton();
        ispravnoDaVo = new javax.swing.JRadioButton();
        dodajVozilo = new javax.swing.JButton();
        obrisiVozilo = new javax.swing.JButton();
        ModelVozila = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        proizvodjacVozila = new javax.swing.JTextField();
        ModelVozila1 = new javax.swing.JLabel();
        modelVozila = new javax.swing.JTextField();
        ispravnoNeVo = new javax.swing.JRadioButton();
        ModelVozila2 = new javax.swing.JLabel();
        kategorijaVozila = new javax.swing.JComboBox();
        tehnicki3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        azuriranjPodataka = new javax.swing.JMenuItem();
        promjenaLozinke = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenu4.setText("jMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel3.setText("Oib ");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/pretraga.png"))); // NOI18N
        jLabel1.setText("Pretraga po stranci");

        ostaliPodaciOStranci.setText("Ostali podaci o stranci");
        ostaliPodaciOStranci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ostaliPodaciOStranciActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/stranka.png"))); // NOI18N
        jLabel11.setText("Stranka");

        novaStranka.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        novaStranka.setForeground(new java.awt.Color(255, 0, 0));
        novaStranka.setText("Nova stranka");
        novaStranka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaStrankaActionPerformed(evt);
            }
        });

        jLabel6.setText("Mobitel (+385/xxx-xxx-xxxx)");

        pretraga.setEditable(true);
        pretraga.setMaximumRowCount(20);
        pretraga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pretragaMouseClicked(evt);
            }
        });
        pretraga.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                pretragaPopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel4.setText("Adresa");

        jLabel9.setText("Prezime stranke /Naziv firme");

        jLabel2.setText("Ime ,prezime stranke /Naziv firme");

        prezimeStranke.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prezimeStrankeKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mobitel)
                    .addComponent(prezimeStranke)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ostaliPodaciOStranci, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(novaStranka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adresa)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imeStranke)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(oib)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pretraga, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(novaStranka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imeStranke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prezimeStranke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobitel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ostaliPodaciOStranci)
                .addGap(19, 19, 19))
        );

        noviUnosVozila.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        noviUnosVozila.setForeground(new java.awt.Color(255, 0, 0));
        noviUnosVozila.setText("Novo vozilo");
        noviUnosVozila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noviUnosVozilaActionPerformed(evt);
            }
        });

        jLabel12.setText("Godiste(xxxx)");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/vozilo2.png"))); // NOI18N
        jLabel7.setText("Vozilo");

        jLabel8.setText("Boja");

        jLabel10.setText("Tablice(Zg-xxxx-dt)");

        ostaliPodaciOVozilu.setText("Ostali podaci o vozilu");
        ostaliPodaciOVozilu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ostaliPodaciOVoziluActionPerformed(evt);
            }
        });

        godiste.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                godisteKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ostaliPodaciOVozilu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(godiste)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imeVo)
                    .addComponent(noviUnosVozila, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tablice)
                    .addComponent(boja)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(noviUnosVozila)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imeVo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(godiste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(ostaliPodaciOVozilu)
                .addContainerGap())
        );

        obrisiStranku.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        obrisiStranku.setForeground(new java.awt.Color(255, 0, 0));
        obrisiStranku.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/obrisi2.png"))); // NOI18N
        obrisiStranku.setText("Obriši stranku");
        obrisiStranku.setAlignmentY(0.2F);
        obrisiStranku.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        obrisiStranku.setIconTextGap(12);
        obrisiStranku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obrisiStrankuActionPerformed(evt);
            }
        });

        ispravnoNeS.setText("Ne");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/vozila.png"))); // NOI18N
        jLabel5.setText("Lista vozila");

        jLabel17.setText("Ispravno");

        vozilaList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        vozilaList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vozilaListMouseClicked(evt);
            }
        });
        vozilaList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                vozilaListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(vozilaList);

        ispravnoDaS.setText("Da");

        dodajstranku.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dodajstranku.setForeground(new java.awt.Color(255, 0, 0));
        dodajstranku.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/dodaj2.png"))); // NOI18N
        dodajstranku.setText("Dodaj stranku");
        dodajstranku.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dodajstranku.setIconTextGap(12);
        dodajstranku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajstrankuActionPerformed(evt);
            }
        });

        izmjeniStranku.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        izmjeniStranku.setForeground(new java.awt.Color(255, 51, 0));
        izmjeniStranku.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/izmjeni.png"))); // NOI18N
        izmjeniStranku.setText("Izmjeni podatke");
        izmjeniStranku.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        izmjeniStranku.setIconTextGap(12);
        izmjeniStranku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izmjeniStrankuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(dodajstranku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(izmjeniStranku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(obrisiStranku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ispravnoDaS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ispravnoNeS)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(dodajstranku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(izmjeniStranku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(obrisiStranku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(ispravnoNeS)
                    .addComponent(ispravnoDaS))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Redosljed unosa kod nove registracije\n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10), new java.awt.Color(255, 0, 0))); // NOI18N

        tehnickipregledi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/tehnicki.png"))); // NOI18N
        tehnickipregledi.setText("Tehnički");
        tehnickipregledi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tehnickipreglediActionPerformed(evt);
            }
        });

        jLabel13.setText("1 ->>>>>");

        placanja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/placanje.png"))); // NOI18N
        placanja.setText("Plaćanje");
        placanja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placanjaActionPerformed(evt);
            }
        });

        registracija.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/registracija.png"))); // NOI18N
        registracija.setText("Registracija");
        registracija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registracijaActionPerformed(evt);
            }
        });

        jLabel14.setText("2 ->>>>>");

        jLabel15.setText("3 ->>>>>");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tehnickipregledi, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(placanja, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(registracija, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tehnickipregledi)
                    .addComponent(placanja)
                    .addComponent(registracija))
                .addContainerGap())
        );

        promjeniVozilo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        promjeniVozilo.setForeground(new java.awt.Color(255, 51, 0));
        promjeniVozilo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/izmjeni.png"))); // NOI18N
        promjeniVozilo.setText("Izmjeni podatke\n");
        promjeniVozilo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        promjeniVozilo.setIconTextGap(12);
        promjeniVozilo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promjeniVoziloActionPerformed(evt);
            }
        });

        ispravnoDaVo.setText("Da");

        dodajVozilo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dodajVozilo.setForeground(new java.awt.Color(255, 0, 0));
        dodajVozilo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/dodaj2.png"))); // NOI18N
        dodajVozilo.setText("Dodaj vozilo");
        dodajVozilo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dodajVozilo.setIconTextGap(12);
        dodajVozilo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajVoziloActionPerformed(evt);
            }
        });

        obrisiVozilo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        obrisiVozilo.setForeground(new java.awt.Color(255, 0, 0));
        obrisiVozilo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/obrisi2.png"))); // NOI18N
        obrisiVozilo.setText("Obriši vozilo");
        obrisiVozilo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        obrisiVozilo.setIconTextGap(12);
        obrisiVozilo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obrisiVoziloActionPerformed(evt);
            }
        });

        ModelVozila.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ModelVozila.setText("Model Vozila");

        jLabel18.setText("Ispravno");

        ModelVozila1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ModelVozila1.setText("Kategorija Vozila");

        ispravnoNeVo.setText("Ne");

        ModelVozila2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ModelVozila2.setText("Proizvodjač Vozila");

        kategorijaVozila.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Osobno vozilo", "Teretno vozilo", "Motocikl", "Laka prikolica", " " }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(modelVozila)
                    .addComponent(ModelVozila1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ispravnoDaVo)
                        .addGap(12, 12, 12)
                        .addComponent(ispravnoNeVo))
                    .addComponent(dodajVozilo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(obrisiVozilo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(promjeniVozilo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(proizvodjacVozila, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ModelVozila2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ModelVozila, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(kategorijaVozila, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ModelVozila)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelVozila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ModelVozila1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kategorijaVozila, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ModelVozila2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proizvodjacVozila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dodajVozilo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(promjeniVozilo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(obrisiVozilo)
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ispravnoDaVo)
                    .addComponent(ispravnoNeVo)
                    .addComponent(jLabel18))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        tehnicki3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/zatvori.png"))); // NOI18N
        tehnicki3.setText("Izlaz");
        tehnicki3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tehnicki3MouseClicked(evt);
            }
        });
        tehnicki3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tehnicki3izlazIzPrograma(evt);
            }
        });

        jMenu1.setText("Rad sa");

        jMenu3.setText("Zaposlenicima");

        azuriranjPodataka.setText("Ažuriranje podataka");
        azuriranjPodataka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azuriranjPodatakaActionPerformed(evt);
            }
        });
        jMenu3.add(azuriranjPodataka);

        promjenaLozinke.setText("Promjena Lozinke");
        promjenaLozinke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promjenaLozinkeActionPerformed(evt);
            }
        });
        jMenu3.add(promjenaLozinke);

        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ostalo");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(128, 128, 128)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tehnicki3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tehnicki3)
                        .addGap(43, 43, 43))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 31, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void azuriranjPodatakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azuriranjPodatakaActionPerformed
        new PretragaZaposlenika(zaposlenik).setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_azuriranjPodatakaActionPerformed

    private void promjenaLozinkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promjenaLozinkeActionPerformed
        new PromjenaLozinke(zaposlenik).setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_promjenaLozinkeActionPerformed

    private void prezimeStrankeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prezimeStrankeKeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_prezimeStrankeKeyTyped

    private void ostaliPodaciOStranciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ostaliPodaciOStranciActionPerformed
       
        if (stranka.getSifra() == 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo stranku iz izbornika!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        OstaliPodaciStranke oPodaci;
        oPodaci = new OstaliPodaciStranke();
        oPodaci.setStranka(stranka);
        oPodaci.popuniPolja(stranka);
        oPodaci.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_ostaliPodaciOStranciActionPerformed

    private void novaStrankaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaStrankaActionPerformed

        ocistiPoljaStranke();
        // TODO add your handling code here:
    }//GEN-LAST:event_novaStrankaActionPerformed

    private void pretragaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_pretragaPopupMenuWillBecomeVisible

        if (pretraga.getSelectedIndex() < 0) {

            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo stranku iz izbornika!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            stranka = obradaGlavniProzor.getStrankaExact(upis);
            popuniPoljaStranke(stranka);
            ucitajPodatkeListeVozila();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pretragaPopupMenuWillBecomeVisible

    private void vozilaListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vozilaListMouseClicked
        //metoda s kojom dobijamo list vozila odabrango korisnika

        //dohvaćanje vozila sa liste
        vozilo = (Vozilo) vozilaList.getSelectedValue();
        // metoda za popunjavanje liste
        popuniPoljaVozila(vozilo);

        // TODO add your handling code here:
    }//GEN-LAST:event_vozilaListMouseClicked

    private void dodajstrankuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajstrankuActionPerformed

        if (imeStranke.getText().trim().length() == 0 || oib.getText().trim().length() == 0 || adresa.getText().trim().length() == 0 || mobitel.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Obavezan unos svih polja stranke!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        stranka = new Stranka();

        if (!ku.provjeraUnosaOiba(oib) || !ku.provjeraUnosaZaMobitel(mobitel) || !ku.provjeraUnosaImenaPrezimena(imeStranke) || !ku.provjeraUnosaImenaPrezimena(prezimeStranke) || !ku.provjeraUnosaAdrese(adresa) || ku.provjeraIstogOibaDodavanje(oib, query1)) {
            return;
        }

        postaviPoljaStranke(stranka);

        if (ispravnoNeS.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite dodati stranku označite ispravnost unosa!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (obradaGlavniProzor.dodaj(stranka)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspješno dodana stranka!",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogreška kod spremanja!",
                        "Greška",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_dodajstrankuActionPerformed

    private void izmjeniStrankuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izmjeniStrankuActionPerformed

        if (pretraga.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Morate odabrati stranku koju želite izmjeniti!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        stranka = obradaGlavniProzor.getStrankaExact(upis);

        if (!ku.provjeraUnosaOiba(oib) || !ku.provjeraUnosaZaMobitel(mobitel) || !ku.provjeraUnosaImenaPrezimena(imeStranke) || !ku.provjeraUnosaImenaPrezimena(prezimeStranke) || !ku.provjeraUnosaAdrese(adresa)
                || ku.provjeraIstogOibaIzmjena(oib, query, stranka.getSifra())) {
            return;
        }

        postaviPoljaStranke(stranka);

        if (ispravnoNeS.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite ostvarit izmjenu označite ispravnost unosa!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
        } else {

            if (obradaGlavniProzor.izmjeni(stranka)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspješno promjenjeno!",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogreška kod spremanja!",
                        "Greška",
                        JOptionPane.ERROR_MESSAGE);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_izmjeniStrankuActionPerformed

    private void obrisiStrankuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obrisiStrankuActionPerformed
        if (pretraga.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Morate odabrati stranku koju želite obrisati!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        stranka = obradaGlavniProzor.getStrankaExact(upis);

        Object[] options = {"Da", "Ne, vrati se nazad!",};

        int izbor = JOptionPane.showOptionDialog(rootPane, "Da li stvarno želite obrisati stavku ??", "Sistem", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (ispravnoNeS.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite obrisati stranku označite ispravnost odabira!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
        } else if (izbor == 0) {
            try {
                if (obradaGlavniProzor.obrisi(stranka)) {

                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Uspješno obrisana stranka!",
                            "Poruka",
                            JOptionPane.PLAIN_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Pogreška kod brisanja stranke!",
                            "Greška",
                            JOptionPane.ERROR_MESSAGE);
                }
            } catch (IznimkaBrisanja ex) {
                switch (ex.getIznimka()) {
                    case ObradaStrankeIVozila.STRANKA_IMA_EVIDENTIRANA_VOZILA:
                        JOptionPane.showMessageDialog(
                                rootPane,
                                "Stranka ima vozila koja su evidentirana na nju te zbog toga stranku nije moguće obrisati!",
                                "Greška",
                                JOptionPane.ERROR_MESSAGE);

                }
            }
        }
    }//GEN-LAST:event_obrisiStrankuActionPerformed

    private void ostaliPodaciOVoziluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ostaliPodaciOVoziluActionPerformed

        if (vozilaList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo vozilo iz izbornika!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        OstaliPodaciVozila ostPo = new OstaliPodaciVozila();

        vozilo = (Vozilo) vozilaList.getSelectedValue();
        ostPo.setVozilo(vozilo);
        ostPo.popuniPolja(vozilo);
        ostPo.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_ostaliPodaciOVoziluActionPerformed

    private void godisteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_godisteKeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_godisteKeyTyped

    private void noviUnosVozilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noviUnosVozilaActionPerformed

        ocistiPoljaVozila();
        // TODO add your handling code here:
    }//GEN-LAST:event_noviUnosVozilaActionPerformed

    private void tehnickipreglediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tehnickipreglediActionPerformed

        if (vozilaList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo vozilo iz izbornika!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        TehnickiVozila teh = new TehnickiVozila();
        vozilo = (Vozilo) vozilaList.getSelectedValue();
        teh.setVozilo(vozilo);

        teh.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_tehnickipreglediActionPerformed

    private void placanjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placanjaActionPerformed

        if (vozilaList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo vozilo iz izbornika!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                PlacanjeView pl = new PlacanjeView();
                vozilo = (Vozilo) vozilaList.getSelectedValue();
                tehnicki = obradaTehncki.getTehnicki(vozilo);
                if (tehnicki == null) {
                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Da biste napravili unos plaćanja potrebno je prvo unjeti podatke o tehničkom pregledu!",
                            "Pogreška",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                pl.setVozilo(vozilo);
                pl.setStranka(stranka);
                pl.setTehnicki(tehnicki);
                pl.provjeraZaPlacanjePrekoTehnickog(tehnicki);

                //podaci za naplatu
                pl.setVisible(true);
            }
        });

        // TODO add your handling code here:
    }//GEN-LAST:event_placanjaActionPerformed

    private void registracijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registracijaActionPerformed
        if (vozilaList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo vozilo iz izbornika!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        RegistracijaVozila reg = new RegistracijaVozila(zaposlenik);
        vozilo = (Vozilo) vozilaList.getSelectedValue();
        placanje = obradaPlacanja.getPlacanje(vozilo);
        if (placanje == null) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Za odabrano vozilo nema podataka o plaćanju!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        reg.setVozilo(vozilo);
        reg.setStranka(stranka);
        reg.setPlacanje(placanje);
        reg.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_registracijaActionPerformed

    private void obrisiVoziloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obrisiVoziloActionPerformed

        if (vozilaList.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Morate odabrati vozilo kako bi mjenjali podatke!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        vozilo = (Vozilo) vozilaList.getSelectedValue();

        Object[] options = {"Da", "Ne, vrati se nazad",};

        int izbor = JOptionPane.showOptionDialog(rootPane, "Da li stvarno želite obrisati vozilo ??", "Sistem", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (ispravnoNeVo.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite ostvarit izmjenu označite ispravnost unosa!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
        } else if (izbor == 0) {
            try {
                if (obradaGlavniProzor.obrisi(vozilo)) {

                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Uspješno obrisano vozilo!",
                            "Poruka",
                            JOptionPane.PLAIN_MESSAGE);
                    ucitajPodatkeListeVozila();
                } else {
                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Pogreška kod brisanja vozila!",
                            "Greška",
                            JOptionPane.ERROR_MESSAGE);

                    // popuniListuVozila(stranka);
                }
            } catch (IznimkaBrisanja ex) {
                switch (ex.getIznimka()) {
                    case ObradaStrankeIVozila.VOZILO_IMA_EVIDIDENTIRANE_UPLATE:
                        JOptionPane.showMessageDialog(rootPane, "Vozilo ima evidentirane uplate te ga nije moguće obrisati", "Pogreška", JOptionPane.ERROR_MESSAGE);
                        break;

                    case ObradaStrankeIVozila.VOZILO_IMA_EVIDENTIRAN_TEHNICKI_PREGLED:
                        JOptionPane.showMessageDialog(rootPane, "Vozilo ima evidentiran tehnički pregled te ga nije moguće obrisati", "Pogreška", JOptionPane.ERROR_MESSAGE);
                        break;
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_obrisiVoziloActionPerformed

    private void promjeniVoziloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promjeniVoziloActionPerformed

        if (vozilaList.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Morate odabrati vozilo kako bi mjenjali podatke!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!ku.provjeraUnosaGodista(godiste) || !ku.provjeraUnosaZaMobitel(mobitel) || !ku.provjeraUnosaOiba(oib) || !ku.provjeraUnosaZaTablice(tablice) || !ku.provjeraUnosaBoje(boja) || !ku.provjeraUnosaModelaVozila(modelVozila)  || !ku.provjeraUnosaKategorijeProizvodjacaVozila(proizvodjacVozila)) {
            return;
        }

        vozilo = (Vozilo) vozilaList.getSelectedValue();

        PostaviPoljaVozila(vozilo);

        if (ispravnoNeVo.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite ostvarit izmjenu označite ispravnost unosa!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (obradaGlavniProzor.izmjeni(vozilo)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspješno izmjena podataka vozila!",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogreška kod izmjene podataka vozila!",
                        "Greška",
                        JOptionPane.ERROR_MESSAGE);

                // popuniListuVozila(stranka);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_promjeniVoziloActionPerformed

    private void dodajVoziloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajVoziloActionPerformed
        vozilo = new Vozilo();

        if (pretraga.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite stranku kojoj dodajte vozilo!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (imeVo.getText().trim().length() == 0 || tablice.getText().trim().length() == 0 || boja.getText().trim().length() == 0 || godiste.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Obavezan unos svih polja!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!ku.provjeraUnosaGodista(godiste) || !ku.provjeraUnosaZaTablice(tablice) || !ku.provjeraUnosaBoje(boja) || !ku.provjeraUnosaModelaVozila(modelVozila)  || !ku.provjeraUnosaKategorijeProizvodjacaVozila(proizvodjacVozila)) {
            return;
        }

        vozilo.setStranka(stranka.getSifra());
        vozilo.setNazivVozila(imeVo.getText());

        PostaviPoljaVozila(vozilo);

        if (ispravnoNeVo.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite dodati vozilo označite ispravnost unosa!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (obradaGlavniProzor.dodaj(vozilo)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspješno dodano vozilo!",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);
                ucitajPodatkeListeVozila();
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogreška kod dodavanja vozila!",
                        "Greška",
                        JOptionPane.ERROR_MESSAGE);

                // popuniListuVozila(stranka);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_dodajVoziloActionPerformed

    private void tehnicki3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tehnicki3MouseClicked
        windowActive = false;
    }//GEN-LAST:event_tehnicki3MouseClicked

    private void tehnicki3izlazIzPrograma(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tehnicki3izlazIzPrograma

        Object[] options = {"Da", "Ne, vrati se nazad!",};

        int izbor = JOptionPane.showOptionDialog(rootPane, "Da li stvarno želite izaći iz programa??", "Sistem", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (izbor == 0) {
            System.exit(0);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tehnicki3izlazIzPrograma

    private void pretragaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pretragaMouseClicked

        if (pretraga.getSelectedIndex() < 0) {
            ocistiPoljaStranke();
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo stranku iz izbornika!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        //upis = pretraga.getEditor().getItem().toString();
        pretraga.setModel(obradaGlavniProzor.getLista(upis));

        if (pretraga.getItemCount() > 0) {
            pretraga.getEditor().setItem(upis);
            pretraga.showPopup();

        }

        //stranka = (Stranka) pretraga.getEditor().getItem();
        stranka = obradaGlavniProzor.getStrankaExact(upis);

        popuniPoljaStranke(stranka);
        ucitajPodatkeListeVozila();
        // TODO add your handling code here:
    }//GEN-LAST:event_pretragaMouseClicked

    private void vozilaListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_vozilaListValueChanged

        if (evt.getValueIsAdjusting()) {
            return;
        }

        vozilo = (Vozilo) vozilaList.getSelectedValue();

        popuniPoljaVozila(vozilo);

        // TODO add your handling code here:
    }//GEN-LAST:event_vozilaListValueChanged

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ModelVozila;
    private javax.swing.JLabel ModelVozila1;
    private javax.swing.JLabel ModelVozila2;
    private javax.swing.JTextField adresa;
    private javax.swing.JMenuItem azuriranjPodataka;
    private javax.swing.JTextField boja;
    private javax.swing.JButton dodajVozilo;
    private javax.swing.JButton dodajstranku;
    private javax.swing.JTextField godiste;
    private javax.swing.ButtonGroup grupaIspravnoS;
    private javax.swing.ButtonGroup grupaIspravnoVo;
    private javax.swing.JTextField imeStranke;
    private javax.swing.JTextField imeVo;
    private javax.swing.JRadioButton ispravnoDaS;
    private javax.swing.JRadioButton ispravnoDaVo;
    private javax.swing.JRadioButton ispravnoNeS;
    private javax.swing.JRadioButton ispravnoNeVo;
    private javax.swing.JButton izmjeniStranku;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox kategorijaVozila;
    private javax.swing.JTextField mobitel;
    private javax.swing.JTextField modelVozila;
    private javax.swing.JButton novaStranka;
    private javax.swing.JButton noviUnosVozila;
    private javax.swing.JButton obrisiStranku;
    private javax.swing.JButton obrisiVozilo;
    private javax.swing.JTextField oib;
    private javax.swing.JButton ostaliPodaciOStranci;
    private javax.swing.JButton ostaliPodaciOVozilu;
    private javax.swing.JButton placanja;
    private javax.swing.JComboBox pretraga;
    private javax.swing.JTextField prezimeStranke;
    private javax.swing.JTextField proizvodjacVozila;
    private javax.swing.JMenuItem promjenaLozinke;
    private javax.swing.JButton promjeniVozilo;
    private javax.swing.JButton registracija;
    private javax.swing.JTextField tablice;
    private javax.swing.JButton tehnicki3;
    private javax.swing.JButton tehnickipregledi;
    private javax.swing.JList vozilaList;
    // End of variables declaration//GEN-END:variables

    private void pretrazivanje() {

        pretraga.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent evt) {

                upis = pretraga.getEditor().getItem().toString();
                char c = evt.getKeyChar();

                if (c == KeyEvent.VK_ENTER
                        && pretraga.getItemCount() > 0) {

                    DefaultComboBoxModel<String> m
                            = (DefaultComboBoxModel<String>) pretraga.getModel();

                    if (m.getSize() > 0) {
                        upis = (String) m.getSelectedItem();
                    }

                    stranka = obradaGlavniProzor.getStrankaExact(upis);
                    popuniPoljaStranke(stranka);
                    ucitajPodatkeListeVozila();
                    return;
                } else if (evt.getKeyCode() >= 65 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105 || evt.getKeyCode() == 8) {

                    pretraga.setModel(obradaGlavniProzor.getLista(upis));

                    stranka = obradaGlavniProzor.getStrankaExact(upis);
                    popuniPoljaStranke(stranka);
                    ucitajPodatkeListeVozila();
                    if (pretraga.getItemCount() > 0) {
                        pretraga.getEditor().setItem(upis);
                        pretraga.showPopup();

                    } else {

                        pretraga.addItem(upis);
                    }
                } else if (c == KeyEvent.VK_BACK_SPACE) {
                    pretraga.hidePopup();
                    pretraga.removeAllItems();
                    //pretraga.removeAll();
                    ocistiListuVozila();
                    ocistiPoljaVozila();
                    ocistiPoljaStranke();
                }
            }
        });
    }

    private void popuniPoljaStranke(Stranka stranka) {

        try {
            imeStranke.setText(stranka.getIme());
        } catch (Exception e) {
            imeStranke.setText(null);
        }

        try {
            prezimeStranke.setText(stranka.getPrezime());
        } catch (Exception e) {
            imeStranke.setText(null);
        }

        try {
            oib.setText(stranka.getOib());
        } catch (Exception e) {
            oib.setText(null);
        }

        try {
            mobitel.setText(stranka.getMobitel());
        } catch (Exception e) {
            mobitel.setText(Integer.toString(0));
        }

        try {
            adresa.setText(stranka.getAdresa());
        } catch (Exception e) {
            adresa.setText(null);
        }

    }

    private void ucitajPodatkeListeVozila() {
        List<Vozilo> vozila = obradaGlavniProzor.getVozila(stranka);

        DefaultListModel<Vozilo> vo
                = new DefaultListModel<>();
        for (Vozilo vozilo : vozila) {
            vo.addElement(vozilo);
        }

        this.vozilaList.setModel(vo);

    }

    private void popuniPoljaVozila(Vozilo vozilo) {
        try {
            imeVo.setText(vozilo.getNazivVozila());
        } catch (Exception e) {
            imeVo.setText(null);
        }

        try {
            tablice.setText(vozilo.getTablice());
        } catch (Exception e) {
            tablice.setText(null);
        }

        try {
            boja.setText(vozilo.getBoja());
        } catch (Exception e) {
            boja.setText(null);
        }

        try {
            godiste.setText(Integer.toString(vozilo.getGodiste()));
        } catch (Exception e) {
            godiste.setText(Integer.toString(0));
        }

        try {
            modelVozila.setText(vozilo.getModelVozila());
        } catch (Exception e) {
            modelVozila.setText(null);
        }

        try {
            if (null != vozilo.getKategorijaVozila()) switch (vozilo.getKategorijaVozila()) {
                case "Osobno vozilo":
                    kategorijaVozila.setSelectedIndex(0);
                    break;
                case "Teretno vozilo":
                    kategorijaVozila.setSelectedIndex(1);
                    break;
                case "Motocikl":
                    kategorijaVozila.setSelectedIndex(2);
                    break;
                case "Laka prikolica":
                    kategorijaVozila.setSelectedIndex(3);
                    break;
            }

        } catch (Exception e) {
            kategorijaVozila.setSelectedIndex(0);
        }

        try {
            proizvodjacVozila.setText(vozilo.getProizvodjacVozila());
        } catch (Exception e) {
            proizvodjacVozila.setText(null);
        }
    }

    boolean active() {
        return windowActive;
    }

    private void ocistiListuVozila() {
        DefaultListModel listModel = (DefaultListModel) vozilaList.getModel();
        listModel.removeAllElements();
    }

    private void ocistiPoljaVozila() {
        imeVo.setText(null);
        tablice.setText(null);
        boja.setText(null);
        godiste.setText(null);
        modelVozila.setText(null);
        kategorijaVozila.setSelectedItem(1);
        proizvodjacVozila.setText(null);

    }

    private void ocistiPoljaStranke() {
        imeStranke.setText(null);
        prezimeStranke.setText(null);
        oib.setText(null);
        adresa.setText(null);
        mobitel.setText(null);
    }

    private void PostaviPoljaVozila(Vozilo vozilo) {

        vozilo.setNazivVozila(imeVo.getText());
        vozilo.setTablice(tablice.getText());
        vozilo.setBoja(boja.getText());
        vozilo.setGodiste(Integer.parseInt(godiste.getText()));
        vozilo.setModelVozila(modelVozila.getText());
        
        vozilo.setKategorijaVozila(kategorijaVozila.getSelectedItem().toString());
        vozilo.setProizvodjacVozila(proizvodjacVozila.getText());
        
    }

    private void postaviPoljaStranke(Stranka stranka) {
        stranka.setIme(imeStranke.getText().trim());

        stranka.setPrezime(prezimeStranke.getText().trim());

        stranka.setAdresa(adresa.getText());

        stranka.setMobitel(mobitel.getText());

        stranka.setOib(oib.getText());
    }

}
