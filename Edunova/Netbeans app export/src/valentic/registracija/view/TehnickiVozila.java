/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package valentic.registracija.view;


import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import valentic.registracija.controller.KontrolaUnosa;
import valentic.registracija.controller.ObradaTehnicki;
import valentic.registracija.model.Tehnicki;
import valentic.registracija.model.Vozilo;
import valentic.registracija.utility.Pomocno;

/**
 *
 * @author Basic
 */
public class TehnickiVozila extends javax.swing.JFrame {

    private ObradaTehnicki obradaTehnicki;
    private Tehnicki tehnicki;
    private SimpleDateFormat sdf;
    private Vozilo vozilo;
    private int sifra, sifraVozila;
    private KontrolaUnosa ku;

    public TehnickiVozila() {
        initComponents();
        obradaTehnicki = new ObradaTehnicki();
        sdf = new SimpleDateFormat("dd.MM.yyyy");
        grupaIspravnoTe.add(ispravnoDa);
        grupaIspravnoTe.add(ispravnoNe);
        ispravnoNe.setSelected(true);
        setLocationRelativeTo(null);
        grupaIspravnoVozila.add(ispravnoVozilo);
        grupaIspravnoVozila.add(neispravnoVozilo);

        neispravnoVozilo.setSelected(true);
        ku = new KontrolaUnosa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupaIspravnoTe = new javax.swing.ButtonGroup();
        grupaIspravnoVozila = new javax.swing.ButtonGroup();
        izmjeniPodatke = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        dodajPodatke = new javax.swing.JButton();
        ispravnoDa = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nazivStanice = new javax.swing.JTextField();
        cijenaTehnickog = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idTehnickog = new javax.swing.JTextField();
        datumTehnickog = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ispravnoVozilo = new javax.swing.JRadioButton();
        neispravnoVozilo = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        ovlastenaOsoba = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        ispravnoNe = new javax.swing.JRadioButton();
        obrisiPodatke = new javax.swing.JButton();
        unosNovogTehnickog = new javax.swing.JButton();
        nazivVozila = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        izmjeniPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        izmjeniPodatke.setForeground(new java.awt.Color(255, 51, 0));
        izmjeniPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/izmjeni.png"))); // NOI18N
        izmjeniPodatke.setText("Izmjeni podatke");
        izmjeniPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        izmjeniPodatke.setIconTextGap(12);
        izmjeniPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izmjeniPodatkeActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/tehnicki.png"))); // NOI18N
        jLabel11.setText("Tehnički ");

        dodajPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dodajPodatke.setForeground(new java.awt.Color(255, 0, 0));
        dodajPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/dodaj2.png"))); // NOI18N
        dodajPodatke.setText("Dodaj podatke");
        dodajPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dodajPodatke.setIconTextGap(12);
        dodajPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajPodatkeActionPerformed(evt);
            }
        });

        ispravnoDa.setText("Ispravno");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tehnički\n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 0, 51)));

        jLabel8.setText("Ovlaštena osoba");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/kalendar.png"))); // NOI18N
        jLabel2.setText("Datum pregleda (dd.MM.yyyy)");

        jLabel6.setText("Naziv stanice za tehničkih pregled");

        jLabel7.setText("Ispravnost vozila");

        jLabel3.setText("Cijena tehničkog pregleda");

        ispravnoVozilo.setText("Da");

        neispravnoVozilo.setText("Ne");

        jLabel9.setText("Id tehničkog pregleda");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ovlastenaOsoba, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(neispravnoVozilo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ispravnoVozilo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(datumTehnickog, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cijenaTehnickog, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nazivStanice, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idTehnickog, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datumTehnickog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cijenaTehnickog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ispravnoVozilo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(neispravnoVozilo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nazivStanice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ovlastenaOsoba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idTehnickog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/zatvori.png"))); // NOI18N
        jButton9.setText("Zatvori prozor");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zatvoriProzro(evt);
            }
        });

        ispravnoNe.setText("Neispravno");

        obrisiPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        obrisiPodatke.setForeground(new java.awt.Color(255, 0, 0));
        obrisiPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/obrisi2.png"))); // NOI18N
        obrisiPodatke.setText("Obriši podatke");
        obrisiPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        obrisiPodatke.setIconTextGap(12);
        obrisiPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obrisiPodatkeActionPerformed(evt);
            }
        });

        unosNovogTehnickog.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        unosNovogTehnickog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/dodaj2.png"))); // NOI18N
        unosNovogTehnickog.setText("Pripremi novi unos");
        unosNovogTehnickog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unosNovogTehnickogActionPerformed(evt);
            }
        });

        jLabel1.setText("Naziv vozila");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 133, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ispravnoDa, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(obrisiPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(izmjeniPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(dodajPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nazivVozila)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ispravnoNe, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unosNovogTehnickog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nazivVozila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dodajPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(izmjeniPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addGap(26, 26, 26)
                        .addComponent(obrisiPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(ispravnoDa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ispravnoNe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unosNovogTehnickog, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dodajPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajPodatkeActionPerformed

        tehnicki = new Tehnicki();
        if (datumTehnickog.getText().trim().length() == 0 || cijenaTehnickog.getText().trim().length() == 0 || nazivStanice.getText().trim().length() == 0 || ovlastenaOsoba.getText().trim().length() == 0 || idTehnickog.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Obavezan unos svih polja!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!ku.provjeraUnosaNaziva(nazivStanice) || !ku.provjeraUnosaImenaPrezimena(ovlastenaOsoba) || !ku.provjeraUnosaZaDatum(datumTehnickog) || !ku.provjeraUnosaZaDecimalniZapis(cijenaTehnickog) || !ku.provjeraUnosaID(idTehnickog)) {
            return;
        }

        postaviPoljaZaTehnicki(tehnicki);

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite dodati podatke za Tehnički pregled označite ispravnost odabira!",
                    "Obavijest",
                    JOptionPane.PLAIN_MESSAGE);
        } else {
            if (obradaTehnicki.dodaj(tehnicki)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspješno dodani podaci o Tehničkom! ",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogreška kod dodavanja podataka!",
                        "Greška",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        // TODO add your handling code here:

// TODO add your handling code here:
    }//GEN-LAST:event_dodajPodatkeActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        tehnicki = obradaTehnicki.getTehnicki(vozilo);
        popuniPoljaTehnickog(tehnicki);

// TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void unosNovogTehnickogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unosNovogTehnickogActionPerformed

        Pomocno.KontrolaDatuma(datumTehnickog);
        cijenaTehnickog.setText(null);
        neispravnoVozilo.setSelected(true);
        nazivStanice.setText(null);
        ovlastenaOsoba.setText(null);
        idTehnickog.setText(null);

// TODO add your handling code here:
    }//GEN-LAST:event_unosNovogTehnickogActionPerformed

    private void izmjeniPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izmjeniPodatkeActionPerformed

        if (!ku.provjeraUnosaNaziva(nazivStanice) || !ku.provjeraUnosaImenaPrezimena(ovlastenaOsoba) || !ku.provjeraUnosaZaDatum(datumTehnickog) || !ku.provjeraUnosaZaDecimalniZapis(cijenaTehnickog) || !ku.provjeraUnosaID(idTehnickog)) {
            return;
        }
        postaviPoljaZaTehnicki(tehnicki);

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite izmjenit podatke označite ispravnost odabira!",
                    "Obavijest",
                    JOptionPane.PLAIN_MESSAGE);
        } else {
            if (obradaTehnicki.dodaj(tehnicki)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspješno dodani podaci o Tehničkom! ",
                        "Obavijest",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogreška kod dodavanja podataka!",
                        "Greška",
                        JOptionPane.ERROR_MESSAGE);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_izmjeniPodatkeActionPerformed

    private void obrisiPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obrisiPodatkeActionPerformed

        Object[] options = {"Da", "Ne, vrati se nazad",};

        int izbor = JOptionPane.showOptionDialog(rootPane, "Da li stvarno želite obrisati podatke o Tehničkom pregledu ??", "Sistem", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko želite izmjenit podatke označite ispravnost odabira!",
                    "Obavijest",
                    JOptionPane.PLAIN_MESSAGE);
        } else if (izbor == 0) {
            if (obradaTehnicki.obrisi(tehnicki)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspješno obrisani podaci o tehničkom! ",
                        "Obavijest",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogreška kod dodavanja podataka!",
                        "Greška",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_obrisiPodatkeActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        popuniSifruPodataka(tehnicki);

        if (sifra == 0) {

            //enableDodajButton();
        } else {
            //disbaleDodajButton();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void zatvoriProzro(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zatvoriProzro
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_zatvoriProzro

    /**
     * @param args the command line arguments
     */
    void setVozilo(Vozilo vozilo) {
        this.vozilo = vozilo;
    }

    private void popuniPoljaTehnickog(Tehnicki te) {

        sifraVozila = vozilo.getSifra();
        nazivVozila.setText(String.format(vozilo.getNazivVozila()));
        
        try {
            datumTehnickog.setText(sdf.format(te.getDatumTechnickog()));
        } catch (Exception e) {
            Pomocno.KontrolaDatuma(datumTehnickog);
        }

        try {
            cijenaTehnickog.setText(String.valueOf(te.getCijenaTehnickog()));
        } catch (Exception e) {
            cijenaTehnickog.setText(null);
        }

        try {
            nazivStanice.setText(te.getNazivStanice());
        } catch (Exception e) {
            nazivStanice.setText(null);
        }

        try {
            ovlastenaOsoba.setText(te.getImeOvlasteneOsobe());
        } catch (Exception e) {
            ovlastenaOsoba.setText(null);
        }

        try {
            idTehnickog.setText(te.getIdTehnickog());
        } catch (Exception e) {
            idTehnickog.setText(Integer.toString(0));
        }
        
        try {
            if(tehnicki.isIspravnoVozilo()==true){
            ispravnoVozilo.setSelected(true);
        }else if(tehnicki.isIspravnoVozilo()==false)
        {
            neispravnoVozilo.setSelected(true);
        }
        } catch (Exception e) {
            neispravnoVozilo.setSelected(true);
        }
        

    }

    

  

    void popuniSifruPodataka(Tehnicki te) {
        try {
            sifra = te.getSifra();
        } catch (Exception e) {
            sifra = 0;
        }

    }
    /*
     void disbaleDodajButton()
     {
     dodajPodatke.setEnabled(false);
     }
     void enableDodajButton()
     {
     dodajPodatke.setEnabled(true);
     }
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cijenaTehnickog;
    private javax.swing.JTextField datumTehnickog;
    private javax.swing.JButton dodajPodatke;
    private javax.swing.ButtonGroup grupaIspravnoTe;
    private javax.swing.ButtonGroup grupaIspravnoVozila;
    private javax.swing.JTextField idTehnickog;
    private javax.swing.JRadioButton ispravnoDa;
    private javax.swing.JRadioButton ispravnoNe;
    private javax.swing.JRadioButton ispravnoVozilo;
    private javax.swing.JButton izmjeniPodatke;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nazivStanice;
    private javax.swing.JTextField nazivVozila;
    private javax.swing.JRadioButton neispravnoVozilo;
    private javax.swing.JButton obrisiPodatke;
    private javax.swing.JTextField ovlastenaOsoba;
    private javax.swing.JButton unosNovogTehnickog;
    // End of variables declaration//GEN-END:variables

    private void postaviPoljaZaTehnicki(Tehnicki tehnicki) {
        tehnicki.setVozilo(sifraVozila);
        try {
            tehnicki.setDatumTechnickog(sdf.parse(datumTehnickog.getText()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Unesite datum u formatu mm.DD.yyyy!",
                    "Pogreška",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        tehnicki.setCijenaTehnickog(new BigDecimal(cijenaTehnickog.getText()));

        if (ispravnoVozilo.isSelected()) {
            tehnicki.setIspravnoVozilo(true);
        } else if (neispravnoVozilo.isSelected()) {
            tehnicki.setIspravnoVozilo(false);
        }

        tehnicki.setNazivStanice(nazivStanice.getText());

        tehnicki.setImeOvlasteneOsobe(ovlastenaOsoba.getText());

        tehnicki.setIdTehnickog(idTehnickog.getText());
    }

   
}
