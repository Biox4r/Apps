/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package valentic.registracija.zaposlenici.view;


import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import valentic.registracija.controller.KontrolaUnosa;
import valentic.registracija.controller.ObradaZaposlenika;
import valentic.registracija.model.Zaposlenik;
import valentic.registracija.utility.Pomocno;

/**
 *
 * @author Basic
 */
public class PretragaZaposlenika extends javax.swing.JFrame {

    private Zaposlenik zaposlenik;
    private String upis;
    private ObradaZaposlenika obr;
    private String lozinka;

    private KontrolaUnosa ku;

    /**
     * Creates new form Zapslenici
     */
    public PretragaZaposlenika(Zaposlenik zaposlenik) {
        initComponents();
        obr = new ObradaZaposlenika();
        //upis = (String) pretraga.getEditor().getItem();
        grupaIspravno.add(ispravnoDa);
        grupaIspravno.add(ispravnoNe);
        ispravnoNe.setSelected(true);
        lozinka = Pomocno.generirajLozinku();
        this.zaposlenik = zaposlenik;
        setLocationRelativeTo(null);
        ku = new KontrolaUnosa();
        pretrazivanje();
        setLocationRelativeTo(null);
        
        //popuniPoljaZaposlenika(zaposlenik);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupaIspravno = new javax.swing.ButtonGroup();
        pretraga = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        prezimeZaposlenika = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        imeZaposlenika = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        izmjeniPodatke = new javax.swing.JButton();
        noviZaposlenik = new javax.swing.JButton();
        zatvoriProzor = new javax.swing.JButton();
        dodajPodatke = new javax.swing.JButton();
        ispravnoNe = new javax.swing.JRadioButton();
        obrisiPodatke = new javax.swing.JButton();
        ispravnoDa = new javax.swing.JRadioButton();
        novoPlacanje1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        korisnickoIme = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pretraga.setEditable(true);
        pretraga.setMaximumRowCount(20);
        pretraga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pretragaMouseEntered(evt);
            }
        });
        pretraga.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                pretragaPopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/pretraga.png"))); // NOI18N
        jLabel1.setText("Pretraga zaposlenika");

        prezimeZaposlenika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prezimeZaposlenikaActionPerformed(evt);
            }
        });

        jLabel9.setText("Prezime zaposlenika");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/stranka.png"))); // NOI18N
        jLabel11.setText("Zaposlenik");

        jLabel2.setText("Ime zaposlenika");

        izmjeniPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        izmjeniPodatke.setForeground(new java.awt.Color(255, 51, 0));
        izmjeniPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/izmjeni.png"))); // NOI18N
        izmjeniPodatke.setText("Izmjeni podatke");
        izmjeniPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        izmjeniPodatke.setIconTextGap(12);
        izmjeniPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izmjeniPodatkeActionPerformed(evt);
            }
        });

        noviZaposlenik.setText("Pripremi novi unos");
        noviZaposlenik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noviZaposlenikActionPerformed(evt);
            }
        });

        zatvoriProzor.setText("Zatvori prozor");
        zatvoriProzor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zatvoriProzorActionPerformed(evt);
            }
        });

        dodajPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dodajPodatke.setForeground(new java.awt.Color(255, 0, 0));
        dodajPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/dodaj2.png"))); // NOI18N
        dodajPodatke.setText("Dodaj zaposlenika");
        dodajPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dodajPodatke.setIconTextGap(12);
        dodajPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajPodatkeActionPerformed(evt);
            }
        });

        ispravnoNe.setText("Neispravno");

        obrisiPodatke.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        obrisiPodatke.setForeground(new java.awt.Color(255, 0, 0));
        obrisiPodatke.setIcon(new javax.swing.ImageIcon(getClass().getResource("/valentic/icons/obrisi2.png"))); // NOI18N
        obrisiPodatke.setText("Obri≈°i podatke");
        obrisiPodatke.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        obrisiPodatke.setIconTextGap(12);
        obrisiPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obrisiPodatkeActionPerformed(evt);
            }
        });

        ispravnoDa.setText("Ispravno");

        novoPlacanje1.setText("Promjena Lozinke");
        novoPlacanje1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promjenaLozinke(evt);
            }
        });

        jLabel10.setText("Korisnicko ime");

        korisnickoIme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                korisnickoImeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(korisnickoIme)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(pretraga, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imeZaposlenika, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prezimeZaposlenika, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(novoPlacanje1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dodajPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(obrisiPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(izmjeniPodatke, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(zatvoriProzor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ispravnoDa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ispravnoNe))
                    .addComponent(noviZaposlenik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dodajPodatke)
                    .addComponent(pretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(izmjeniPodatke)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(obrisiPodatke)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ispravnoDa)
                            .addComponent(ispravnoNe)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imeZaposlenika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prezimeZaposlenika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(korisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(noviZaposlenik)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zatvoriProzor)
                    .addComponent(novoPlacanje1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pretragaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pretragaMouseEntered
        //upis = (String) pretraga.getEditor().getItem();
        if (pretraga.getSelectedIndex() < 0) {
            ocistiPoljaZaposlenika();
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo Zaposlenika iz izbornika!",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } 

        // TODO add your handling code here:
    }//GEN-LAST:event_pretragaMouseEntered

    private void pretragaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_pretragaPopupMenuWillBecomeVisible
/*
        if (pretraga.getSelectedIndex() < 0) {

            JOptionPane.showMessageDialog(
                    rootPane,
                    "Odaberite prvo Zaposlenika iz izbornika!",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } /*else {

            zaposlenik = (Zaposlenik) obr.getZaposlenici(upis);

            popuniPoljaZaposlenika(zaposlenik);

        }*/
        // TODO add your handling code here:
    }//GEN-LAST:event_pretragaPopupMenuWillBecomeVisible

    private void prezimeZaposlenikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prezimeZaposlenikaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prezimeZaposlenikaActionPerformed

    private void izmjeniPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izmjeniPodatkeActionPerformed

        if (!ku.provjeraUnosaImenaPrezimena(imeZaposlenika) || !ku.provjeraUnosaImenaPrezimena(prezimeZaposlenika) ||!ku.provjeraUnosaKorisnickogImena(korisnickoIme)) {
            return;
        }

        spremiPodatkeZaposlenika(zaposlenik);

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko ≈æelite izmjeniti podatke za Zaposlenika oznaƒçite ispravnost odabira!",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (obr.promjeni(zaposlenik)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspje≈°na izmjena podataka! ",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogre≈°ka kod dodavanja podataka!",
                        "Gre≈°ka",
                        JOptionPane.ERROR_MESSAGE);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_izmjeniPodatkeActionPerformed

    private void noviZaposlenikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noviZaposlenikActionPerformed

        ocistiPoljaZaposlenika();

        //ukupniZbroj();
        // TODO add your handling code here:
    }//GEN-LAST:event_noviZaposlenikActionPerformed

    private void dodajPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajPodatkeActionPerformed

        zaposlenik = new Zaposlenik();
        if (imeZaposlenika.getText().trim().length() == 0 || prezimeZaposlenika.getText().trim().length() == 0 || korisnickoIme.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Obavezan unos svih polja!",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!ku.provjeraUnosaImenaPrezimena(imeZaposlenika) || !ku.provjeraUnosaImenaPrezimena(prezimeZaposlenika) ||!ku.provjeraUnosaKorisnickogImena(korisnickoIme)) {
            return;
        }

        if (obr.provjeraKorisnickoIme(this.korisnickoIme.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Zaposlenik s istim korisniƒçkim imenom postoji!!", "Pogre≈°ka", JOptionPane.ERROR_MESSAGE);
            this.korisnickoIme.requestFocus();
            return;
        }

        spremiPodatkeZaposlenika(zaposlenik);

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko ≈æelite dodati podatke za Plaƒáanje oznaƒçite ispravnost odabira!",
                    "Pogre≈°ka",
                    JOptionPane.ERROR_MESSAGE);
        } else {

            if (obr.dodaj(zaposlenik)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspje≈°no dodani podaci o Zaposleniku! ",
                        "Poruka",
                        JOptionPane.PLAIN_MESSAGE);

                JOptionPane.showInputDialog(rootPane, "Generirana lozinka za operatera", lozinka);

            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogre≈°ka kod dodavanja podataka!",
                        "Gre≈°ka",
                        JOptionPane.ERROR_MESSAGE);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_dodajPodatkeActionPerformed

    private void obrisiPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obrisiPodatkeActionPerformed

        Object[] options = {"Da", "Ne, vrati se nazad",};

        int izbor = JOptionPane.showOptionDialog(rootPane, "Da li stvarno ≈æelite obrisati podatke o plaƒáanju ??", "Sistem", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (ispravnoNe.isSelected()) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Ukoliko ≈æelite obrisati podatke oznaƒçite ispravnost odabira!",
                    "Obavijest",
                    JOptionPane.ERROR_MESSAGE);
        } else if (izbor == 0) {
            if (obr.obrisi(zaposlenik)) {

                JOptionPane.showMessageDialog(
                        rootPane,
                        "Uspje≈°no obrisani podaci Zaposlenika! ",
                        "Obavijest",
                        JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(
                        rootPane,
                        "Pogre≈°ka kod brisanja podataka!",
                        "Gre≈°ka",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_obrisiPodatkeActionPerformed

    private void promjenaLozinke(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promjenaLozinke
       new PromjenaLozinke(zaposlenik).setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_promjenaLozinke

    private void korisnickoImeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_korisnickoImeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_korisnickoImeActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        //lozinka.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void zatvoriProzorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zatvoriProzorActionPerformed

        dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_zatvoriProzorActionPerformed

      private void pretrazivanje() {

        pretraga.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent evt) {
               
                 upis = pretraga.getEditor().getItem().toString();
                char c = evt.getKeyChar();
                
                  if (c == KeyEvent.VK_ENTER && 
                        pretraga.getItemCount()>0) {
                    //pretraga.addItem(obradaGlavniProzor.getStranka(upis));

                   // stranka = obradaGlavniProzor.getStranka(upis);
                   // popuniPoljaStranke(stranka);
                   // ucitajPodatkeListeVozila();
                    DefaultComboBoxModel<String> m = 
                            (DefaultComboBoxModel<String>) pretraga.getModel();
                 
                    if(m.getSize()>0){
                      upis = (String) m.getSelectedItem();
                  }
                  
                  
                 zaposlenik = obr.getZaposleniciExact(upis);
                  popuniPoljaZaposlenika(zaposlenik);
                  
                   return;
                }
                else
                 
                if (evt.getKeyCode() >= 65 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105 || evt.getKeyCode() == 8) {

                    pretraga.setModel(obr.getPopisZaposlenika(upis));

                    zaposlenik = obr.getZaposleniciExact(upis);
                    
                    
                    if (pretraga.getItemCount() > 0) {
                        pretraga.getEditor().setItem(upis);
                        pretraga.showPopup();

                    } else {

                        pretraga.addItem(upis);

                    }

                }
else
                if (c == KeyEvent.VK_BACK_SPACE) {
                    pretraga.hidePopup();
                    pretraga.removeAllItems();
                    //pretraga.removeAll();
                    
                    ocistiPoljaZaposlenika();
                }
                
               // upis = (String) pretraga.getEditor().getItem();
               // char c = evt.getKeyChar();
               
                
            }
        });

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dodajPodatke;
    private javax.swing.ButtonGroup grupaIspravno;
    private javax.swing.JTextField imeZaposlenika;
    private javax.swing.JRadioButton ispravnoDa;
    private javax.swing.JRadioButton ispravnoNe;
    private javax.swing.JButton izmjeniPodatke;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField korisnickoIme;
    private javax.swing.JButton noviZaposlenik;
    private javax.swing.JButton novoPlacanje1;
    private javax.swing.JButton obrisiPodatke;
    private javax.swing.JComboBox pretraga;
    private javax.swing.JTextField prezimeZaposlenika;
    private javax.swing.JButton zatvoriProzor;
    // End of variables declaration//GEN-END:variables

    private void ocistiPoljaZaposlenika() {
        imeZaposlenika.setText("");
        prezimeZaposlenika.setText("");
        korisnickoIme.setText("");

    }

    private void popuniPoljaZaposlenika(Zaposlenik zaposlenik) {
        if (zaposlenik.getIme() == null) {
            imeZaposlenika.setText("");
        } else {
            imeZaposlenika.setText(zaposlenik.getIme());
        }

        if (zaposlenik.getPrezime() == null) {
            prezimeZaposlenika.setText("");
        } else {
            prezimeZaposlenika.setText(zaposlenik.getPrezime());
        }

        if (korisnickoIme.getText() == null) {
            korisnickoIme.setText("");
        } else {
            korisnickoIme.setText(zaposlenik.getKorisnickoIme());
        }

    }

    

    private void spremiPodatkeZaposlenika(Zaposlenik zaposlenik) {
        zaposlenik.setIme(imeZaposlenika.getText());

        zaposlenik.setPrezime(prezimeZaposlenika.getText());

        zaposlenik.setKorisnickoIme(korisnickoIme.getText());

        zaposlenik.setLozinka(Pomocno.generirajMD5(lozinka.toCharArray()));
    }

    
}
